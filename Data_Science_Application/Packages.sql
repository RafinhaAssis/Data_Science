--PACKAGES:
/*
sÃO AGRUPADORES DE FUNCTIONS E PROCEDIMENTOS, ALEM DE CURSORES E VARIAVEIS.

VANTAGENS:

MELHOR GERENCIAMENTO DE USO DA PACKAGE
REAPROVEITAMENTO DE CODIGO.

DIVISÃO:

A PACKAGE TEM DUAS PARTES DISTINTAS, A PACKAGE SPECIFICATION E A PACKAGE BODY:

A PRIMEIRA PARTE É A ESPECIFICAÇÃO DA PACKGE, OU SEJA TODA PARTE DECLARATIVA DE VARIAVEIS,
CURSORES E MODULOS--> MODULOS SÃO PROCEDURES E FUNCTIONS.

O CURIOSO É QUE A PARTE DECLARATIVA OU SPECIFICATION PODE EXISTIR SEM O CORPO,
MAS O CONTRARIO NUNCA ACONTECE.

*/

--> PACKAGE SPECIFICATION:

--> ESQUELETO:
/*
CREATE OR REPLACE PACKAGE <NOME>
IS 
<VARIAVEIS>
<CURSORES>
<PPROCEDIMENTOS>
<FUNCTION>
END <NOME>;
*/

CREATE OR REPLACE PACKAGE PCK_FACUL
IS
    CNOME CONSTANT VARCHAR2(4) := 'FIAP';
END PCK_FACUL;

--USO DA PACKAGE EM BLOCO ANONIMO:
SET SERVEROUTPUT ON
BEGIN
    DBMS_OUTPUT.PUT_LINE('A FACUL QUE FREQUENTO É '||RM551499.PCK_FACUL.CNOME);
END;


--> A SEGUNDA PARTE DE UMA PACKAGE É ONDE TEM O CÓDIGO PROPRIAMNETE DITO. 
--> É O PACKAGE BODY
--> ESQUELETO:
/*
CREATE OR REPLACE PACKAGE <NOME>
IS 
<VARIAVEIS>
<CURSORES>
<PROCEDIMENTOS>
<FUNCTION>
END <NOME>;
*/

CREATE OR REPLACE PACKAGE PCK_RH
IS
    FUNCTION FU_DESCOBRIR_SALARIO(PEMPNO IN EMP.EMPNO%TYPE) RETURN NUMBER;
END PCK_RH;

CREATE OR REPLACE PACKAGE BODY PCK_RH
IS
    FUNCTION FU_DESCOBRIR_SALARIO(PEMPNO IN EMP.EMPNO%TYPE)
    RETURN NUMBER
    IS
         V_SAL EMP.SAL%TYPE;
    BEGIN
        SELECT SAL INTO V_SAL FROM EMP WHERE EMPNO = PEMPNO;
        RETURN V_SAL;
    END;
END PCK_RH;

-->SELECT SAL FROM EMP WHERE EMPNO = 7369;



-- UM DOS JEITOS DE TESTAR UMA PROCEDURE É COM  O COMANDO EXECUTE:
-- COM BLOCO ANONIMO:

 SELECT PCK_RH.FU_DESCOBRIR_SALARIO(7788) FROM DUAL;
--COM BLOCO ANONIMO:

BEGIN
    DBMS_OUTPUT.PUT_LINE(PCK_RH.FU_DESCOBRIR_SALARIO(7788));
END;


-->> PROCEDURES COM PACKAGE SPECIFICATION

CREATE OR REPLACE PACKAGE PCK_RH
IS
    FUNCTION FU_DESCOBRIR_SALARIO(PEMPNO IN EMP.EMPNO%TYPE) RETURN NUMBER;
    PROCEDURE PR_REAJUSTE_SALARIO(PEMPNO IN EMP.EMPNO%TYPE, P_PCT IN NUMBER DEFAULT 5);
    FUNCTION FU_SAL_MAX RETURN NUMBER;
    FUNCTION FU_SAL_MIN RETURN NUMBER;
END PCK_RH;

CREATE OR REPLACE PACKAGE PCK_RH
IS
    FUNCTION FU_DESCOBRIR_SALARIO(PEMPNO IN EMP.EMPNO%TYPE) RETURN NUMBER;
END PCK_RH;

CREATE OR REPLACE PACKAGE BODY PCK_RH
IS
    FUNCTION FU_DESCOBRIR_SALARIO(PEMPNO IN EMP.EMPNO%TYPE)
    RETURN NUMBER
    IS
         V_SAL EMP.SAL%TYPE;
    BEGIN
        SELECT SAL INTO V_SAL FROM EMP WHERE EMPNO = PEMPNO;
        RETURN V_SAL;
    END;
    
    PROCEDURE PR_REAJUSTE_SALARIO(PEMPNO IN EMP.EMPNO%TYPE, P_PCT IN NUMBER DEFAULT 5)
    IS
    BEGIN
        UPDATE EMP SET SAL = SAL + SAL*P_PCT/100 WHERE EMPNO = PEMPNO;
    END PR_REAJUSTE_SALARIO;
END PCK_RH;

SELECT PCK_RH.FU_DESCOBRIR_SALARIO(7788) FROM DUAL;
EXECUTE PCK_RH.PR_REAJUSTE_SALARIO(7788);
SELECT PCK_RH.FU_DESCOBRIR_SALARIO(7788) FROM DUAL;
ROLLBACK;


SELECT EMPNO FROM EMP WHRE ENAME = 'JONAS';

DECLARE
    V_EMPNO EMP.EMPNO%TYPE;
BEGIN
    SELECT EMPNO INTO V_EMPNO FROM EMP WHRE ENAME = 'JONES';
    DBMS_OUTPUT.PUT_LINE('sALARIO ANTERIOR: '||PCK_RH.FU_DESCOBRIR_SALARIO(V_EMPNO));
    PCK_RH.PR_REAJUSTE_SALARIO(V_EMPNO, 8);
    DBMS_OUTPUT.PUT_LINE('sALARIO ANTERIOR: '||PCK_RH.FU_DESCOBRIR_SALARIO(V_EMPNO));
    ROLLBACK;
END;    


















CREATE OR REPLACE PACKAGE PCK_RH
IS
    FUNCTION FU_DESCOBRIR_SALARIO(PEMPNO IN EMP.EMPNO%TYPE) RETURN NUMBER;
    PROCEDURE PR_REAJUSTE_SALARIO(PEMPNO IN EMP.EMPNO%TYPE, P_PCT IN NUMBER DEFAULT 5);
    FUNCTION FU_SAL_MAX RETURN NUMBER;
    FUNCTION FU_SAL_MIN RETURN NUMBER;
    FUNCTION FU_SAL_OK RETURN NUMBER;
END PCK_RH;


CREATE OR REPLACE PACKAGE BODY PCK_RH
IS
    FUNCTION FU_DESCOBRIR_SALARIO(PEMPNO IN EMP.EMPNO%TYPE)
    RETURN NUMBER
    IS
         V_SAL EMP.SAL%TYPE;
    BEGIN
        SELECT SAL INTO V_SAL FROM EMP WHERE EMPNO = PEMPNO;
        RETURN V_SAL;
    END;
    
    PROCEDURE PR_REAJUSTE_SALARIO(PEMPNO IN EMP.EMPNO%TYPE, P_PCT IN NUMBER DEFAULT 5)
    IS
    BEGIN
        UPDATE EMP SET SAL = SAL + SAL*P_PCT/100 WHERE EMPNO = PEMPNO;
    END PR_REAJUSTE_SALARIO;
    
    FUNCTION FU_SAL_MAX RETURN NUMBER
    IS
        V_SAL_MAX EMP.SAL%TYPE;
        --V_LINHA_EMP EMP%ROWTYPE;
    BEGIN
        SELECT MAX(SAL) INTO V_SAL_MAX FROM EMP;
        RETURN V_SAL_MAX;
    END FU_SAL_MAX;
    
    FUNCTION FU_SAL_MIN RETURN NUMBER
    IS
        V_SAL_MIN EMP.SAL%TYPE;
        --V_LINHA_EMP EMP%ROWTYPE;
    BEGIN
        SELECT MAX(SAL) INTO V_SAL_MIN FROM EMP;
        RETURN V_SAL_MIN;
    END FU_SAL_MIN;
    
    FUNCTION FU_SAL_OK(PEMPNO IN EMP.EMPNO%TYPE)
    RETURN NUMBER
    IS
    BEGIN
       IF(PCK_RH.FU_DESCOBRIR_SALARIO(PEMPNO)> PCK_RH.FU_SAL_MIN) AND (PCK_RH.FU_DESCOBRIR_SALARIO(PEMPNO)<PCK_RH.FU_SAL_MAX) THEN
       RETURN 1;
       ELSE
       RETURN 0;
       END IF;
    END FU_SAL_OK;
END PCK_RH;


SELECT PCK_RH.FU_SAL_MAX FROM DUAL;
SELECT PCK_RH.FU_SAL_MIN FROM DUAL;
SELECT PCK_RH.FU_SAL_OK(7369) FROM DUAL;






